{"version":3,"sources":["./src/app/update-book/update-book.component.ts","./src/app/update-book/update-book.component.html","./src/app/author.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/token-interceptor.service.ts","./src/environments/environment.ts","./src/app/authors/authors.component.ts","./src/app/authors/authors.component.html","./src/app/update-author/update-author.component.ts","./src/app/update-author/update-author.component.html","./src/app/book.service.ts","./src/app/books/books.component.ts","./src/app/books/books.component.html","./src/app/books/book.model.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authors/author.model.ts","./src/app/auth.service.ts","./src/app/new-author/new-author.component.ts","./src/app/new-author/new-author.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/new-book/new-book.component.ts","./src/app/new-book/new-book.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { BookService } from '../book.service';\n\n@Component({\n  selector: 'app-update-book',\n  templateUrl: './update-book.component.html',\n  styleUrls: ['./update-book.component.css']\n})\nexport class UpdateBookComponent implements OnInit {\n  bookItem = {\n    title:'',\n    author:'',\n    genre:'',\n    image:''\n  };\n  constructor(private router:Router,private bookService:BookService,public _auth:AuthService) { }\n\n  ngOnInit(): void {\n    let bookId=localStorage.getItem(\"editBookId\");\n    this.bookService.getBook(bookId)\n    .subscribe((data)=>\n    {\n      this.bookItem  =JSON.parse(JSON.stringify(data));\n    })\n  }\n\n  editBook()\n  {\n    this.bookService.editBook(this.bookItem);\n    alert(\"success\");\n    this.router.navigate(['/books']);\n  }\n\n}\n","<div class='card'>\n        <div class='card-header'>\n           <h3>Edit Book</h3> \n        </div>\n        <div class='card-body'>\n\n                 \n<div class=\"container\">\n    <div class=\"row\">\n      \n      <div class=\"col-md-12\"> \n        \n        <div class=\"panel\">\n          <div class=\"panel-body\">\n            \n            \n       \n            <!--/stories-->\n            <form (ngSubmit)=\"editBook()\" #updatebookform=\"ngForm\">\n              <div class=\"form-group\">\n                  <label >Book Title</label>\n                  <input type=\"text\" name=\"b_title\" [(ngModel)]=\"bookItem.title\" placeholder=\"Type Title Of Book\" class=\"form-control\" required >\n                  <p id=\"titleErr\"></p>\n              </div>\n        \n              <div class=\"form-group\">\n                  <label >Author</label>\n                  <input type=\"text\" name=\"b_auth\" [(ngModel)]=\"bookItem.author\" placeholder=\"Type Author Of Book\"  class=\"form-control\"  required>\n              </div>\n              \n              <div class=\"form-group\">\n                  <label >Book Genre</label>\n                  <input type=\"text\" name=\"b_genre\" [(ngModel)]=\"bookItem.genre\" placeholder=\"Type Genre Of Book\"  class=\"form-control\" required>\n                        \n              </div>\n              <div class=\"form-group\">\n                  <label >Book Image</label>\n                  <input type=\"file\" name=\"b_image\" [(ngModel)]=\"bookItem.image\" placeholder=\"Chose Image Of Book\"  class=\"form-control\" required>\n              </div>\n              <button type=\"submit\"  value=\"Submit\" class=\"btn btn-primary btn-block\" [disabled]=\"updatebookform.form.invalid\">Submit</button>\n  </form>\n  <br>\n  <br>  \n  \n            <!--/stories-->\n            \n            \n          \n            \n          </div>\n        </div>\n                                                                                         \n                                                      \n                                                        \n         </div><!--/col-12-->\n    </div>\n  </div>\n                        \n\n\n\n\n\n\n\n\n            <!-- <div class='table-responsive'>\n                <table class=table>\n                    <tbody>\n                        <tr>\n                            <td><label> Book Title</label></td>\n                            <td><input type=\"text\" name=\"b_title\" [(ngModel)]=\"bookItem.title\"></td>\n                        </tr>\n                        <tr>\n                            <td><label> Book Author</label></td>\n                            <td><input type=\"text\" name=\"b_auth\" [(ngModel)]=\"bookItem.author\"></td>\n                        </tr>\n                        <tr>\n                            <td><label> Book Genre</label></td>\n                            <td><input type=\"text\" name=\"b_genre\" [(ngModel)]=\"bookItem.genre\"></td>\n                        </tr>\n                          <tr>\n                            <td><label> Book Image</label></td>\n                            <td><input type=\"text\" name=\"b_image\" [(ngModel)]=\"bookItem.image\"></td>\n                        </tr>\n                        <tr>\n                            <td></td>\n                            <td><input type=\"submit\" value=\"Submit\"></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </form> -->\n</div>\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorService {\n  item= {\n    name :'',\n    genre:'',\n    book1:'',\n    book2:'',\n    book3:'',\n    image:''\n  }\n  constructor(private http:HttpClient) { }\n\n  getAuthors(){\n    return this.http.get(\"http://localhost:3000/authors\");\n  }\n   \n  getAuthor(id){\n    return this.http.get(\"http://localhost:3000/author/\"+id);\n  }\n\n  newAuthor(item){\n    return this.http.post(\"http://localhost:3000/authors/insert\",{\"author\":item})\n    .subscribe(data=> { console.log(data)} )\n  }\n\n  editAuthor(author)\n  {\n    console.log(\"client update\");\n    return this.http.put(\"http://localhost:3000/authors/update\",author)\n    .subscribe(data=>{\n      console.log(data)\n    })\n  \n  }\n\n  deleteAuthor(id)\n  {\n    return this.http.delete(\"http://localhost:3000/authors/remove/\"+id)\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class='card' style=\"width: 100%\">\n    <div class='card-header' style=\"width: 100\">\n        <h2>HOME</h2>\n    </div>\n    <div class='card-body' style=\"width: 100\">\n       \n\n    \n\n<div class=\"container\">\n    <div class=\"row\">\n      \n      <div class=\"col-md-12\"> \n        \n        <div class=\"panel\">\n          <div class=\"panel-body\">\n            \n            \n            \n            <!--/stories-->\n            <br>\n            <div class=\"row\">    \n              <br>\n              <div class=\"col-md-4 col-sm-6 text-center\">\n                <a class=\"story-title\" href=\"#\"><img alt=\"\" src=\"https://cdn2.penguin.com.au/authors/original/87518au.jpg\" style=\"width:180px;height:200px\" class=\"rounded-circle\"></a>\n              </div>\n              <div class=\"col-md-8 col-sm-6\">\n                <h3>\"The book is a film that takes place in the mind of the reader. That's why we go to movies and say, \"Oh, the book is better”</h3>\n    \n            \n                    <h4><span class=\"label label-default\">-Paulo Coelho</span></h4>\n        \n            \n                \n                <br><br>\n              </div>\n            </div>\n            <hr>\n  \n            <div class=\"row\">    \n              <br>\n              <div class=\"col-md-4 col-sm-6 text-center\">\n                <a class=\"story-title\" href=\"#\"><img alt=\"\" src=\"https://media.npr.org/assets/news/2010/04/20/twain_custom-32181771941946f9382cacc422e3b0abe027a1b4-s800-c85.jpg\" style=\"width:180px;height:200px\" class=\"rounded-circle\"></a>\n              </div>\n              <div class=\"col-md-8 col-sm-6\">\n                  <br>\n                <h3>“Good friends, good books and a sleepy conscience: this is the ideal life”</h3>\n            \n            \n                    <h4><span class=\"label label-default\">-Mark Twain</span></h4>\n                  \n                \n            \n                <br><br>\n              </div>\n            </div>\n            <hr>\n  \n  \n            <div class=\"row\">    \n              <br>\n              <div class=\"col-md-4 col-sm-6 text-center\">\n                <a class=\"story-title\" href=\"#\"><img alt=\"\" src=\"https://d3i6fh83elv35t.cloudfront.net/static/2015/01/3312466_hemingway1-e1540217117842-1024x789.jpg\" style=\"width:180px;height:200px\" class=\"rounded-circle\"></a>\n              </div>\n              <div class=\"col-md-8 col-sm-6\">\n                  <br>\n                  <br>\n\n                <h3>“There is no friend as loyal as a book”</h3>\n\n                    <h4><span class=\"label label-default\">-Ernest Hemingway</span></h4>\n        \n                <br><br>\n              </div>\n            </div>\n            <hr>\n  \n        \n            <div class=\"row\">    \n              <br>\n              <div class=\"col-md-4 col-sm-6 text-center\">\n                <a class=\"story-title\" href=\"#\"><img alt=\"\" src=\"https://cdn.britannica.com/40/1340-050-39EB4F43/photograph-Victor-Hugo-Nadar.jpg\" style=\"width:180px;height:200px\" class=\"rounded-circle\"></a>\n              </div>\n              <div class=\"col-md-8 col-sm-6\">\n                  <br>\n                <h3>“To learn to read is to light a fire; every syllable that is spelled out is a spark”</h3>\n            \n                    <h4><span class=\"label label-default\">-Victor Hugo</span></h4>\n                <br><br>\n              </div>\n            </div>\n            <hr>\n            \n            \n            <!--/stories-->\n            \n            \n           \n          \n            \n          </div>\n        </div>\n                                                                                         \n                                                      \n                                                        \n         </div><!--/col-12-->\n    </div>\n  </div>\n                                                  \n                                                                                  \n  <hr>\n          \n          \n\n    </div>\n</div>\n\n\n\n","import { HttpInterceptor } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private injector:Injector) { }\n  intercept(req,nxt)\n  {\n    let authService=this.injector.get(AuthService)\n    let tokenizedReq=req.clone(\n      {\n        setHeaders:{\n          Authorization:`Bearer ${authService.getToken()}`\n        }\n      }\n    )\n    return nxt.handle(tokenizedReq)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { AuthorService } from '../author.service';\nimport { AuthorModel } from '../authors/author.model'\n\n@Component({\n  selector: 'app-authors',\n  templateUrl: './authors.component.html',\n  styleUrls: ['./authors.component.css']\n})\nexport class AuthorsComponent implements OnInit {\n\n  title: String = \"Author List\";\n  authors: AuthorModel[];\n  imageWidth: number= 50;\n  imageMargin: number= 2;\n  showImage: boolean= false;\n\n  constructor(private authorService:AuthorService,private router:Router,public _auth:AuthService) { }\n  \n  \n\n  ngOnInit(): void {\n    this.authorService.getAuthors().subscribe((data)=>{\n      this.authors=JSON.parse(JSON.stringify(data));\n      console.log(this.authors);\n    })\n  }\n\n  editAuthor(author)\n  {\n    localStorage.setItem(\"editAuthorId\",author._id.toString());\n    this.router.navigate(['update/authors']);\n  }\n\n  deleteAuthor(author)\n  {\n    this.authorService.deleteAuthor(author._id)\n    .subscribe((data)=>{\n      this.authors=this.authors.filter(p=> p !==author);\n    })\n  }\n\n}\n","<div class='card' style=\"width: 100\">\n    <div class='card-header' style=\"width: 100\">\n        <h3>{{title}}</h3>\n    </div>\n    <div class='card-body' style=\"width: 100\">\n\n         <br>\n        <div class=\"row\" *ngFor='let author of authors'>    \n            <br>\n            <div class=\"col-md-3 col-sm-3 text-center\">\n              <img alt=\"\" src={{author.image}} style=\"width:150px;height:150px\"  class=\"rounded-circle\" >\n            </div>\n\n\n            <br>\n            <div class=\"col col-lg-2\">\n              <div class=\"row\">\n                <div class=\"col-xs-9\">\n                    <h2>{{author.name}}</h2>\n                  <h4><span class=\"text-muted\" >{{author.genre}}</span></h4><h4>\n                  <small style=\"font-family:courier,'new courier';\"  class=\"label label-default\">{{author.book1}} <br>{{author.book2}} <br> {{author.book3}}  \n                  </small>\n                  </h4>\n                \n                </div>\n                <div>\n                <button class=\"btn btn-warning\" style=\"cursor: pointer;\" *ngIf=\"_auth.loggedIn()\" (click)=\"editAuthor(author)\" >EDIT</button>\n                <button class=\"btn btn-danger\" id=\"btnspace2\" style=\"cursor: pointer;\" *ngIf=\"_auth.loggedIn()\" (click)=\"deleteAuthor(author)\" >DELETE</button>\n              </div>\n              </div>\n              <hr>\n              <br><br>\n            </div>\n          </div>\n          <hr>\n\n\n\n\n\n\n\n<!-- \n        <div class='table-responsive'>\n            <table class='table'>\n                <thead>\n                    <tr>\n                        <th>\n                            <button class='btn btn-primary' (click)='toggleImage()'>\n                              {{showImage? 'Hide' : 'Show'}} Image\n                            </button>\n                        </th>\n                        <th>Name</th>\n                        <th>Genre</th>\n                        <th>Book1</th>\n                        <th>Book2</th>\n                        <th>Book3</th>\n                    </tr>\n                </thead>\n                <tbody>\n                   <tr *ngFor='let author of authors'>\n                       <td><img *ngIf='showImage'\n                                [src] = 'author.image'\n                                [title] = 'author.name'\n                                [style.width.px] = 'imageWidth'\n                                [style.margin.px] = 'imageMargin'  >\n                        </td>\n                        <td><a routerLink=\"/single\">{{ author.name }}</a></td>\n                        <td>{{ author.genre }}</td>\n                        <td>{{ author.book1 }}</td>\n                        <td>{{ author.book2 }}</td>\n                        <td>{{ author.book3 }}</td>\n                        <td>\n                            <button class=\"btn btn-warning\" style=\"cursor: pointer;\" *ngIf=\"_auth.loggedIn()\" (click)=\"editAuthor(author)\">EDIT</button>\n                            <button class=\"btn btn-danger\" style=\"cursor: pointer;\" *ngIf=\"_auth.loggedIn()\" (click)=\"deleteAuthor(author)\">DELETE</button>\n                        </td>\n                   </tr>\n                    \n                </tbody>\n            </table>\n        </div>\n\n -->\n\n\n\n    </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { AuthorService } from '../author.service';\n\n@Component({\n  selector: 'app-update-author',\n  templateUrl: './update-author.component.html',\n  styleUrls: ['./update-author.component.css']\n})\nexport class UpdateAuthorComponent implements OnInit {\n\n  authorItem = {\n    name:'',\n    genre:'',\n    book1:'',\n    book2:'',\n    book3:'',\n    image:''\n  };\n\n  constructor(private router:Router,private authorService:AuthorService,public _auth:AuthService) { }\n\n  ngOnInit(): void {\n    let authorId=localStorage.getItem(\"editAuthorId\");\n    this.authorService.getAuthor(authorId)\n    .subscribe((data)=>\n    {\n      this.authorItem  =JSON.parse(JSON.stringify(data));\n    })\n  }\n\n  editAuthor()\n  {\n    this.authorService.editAuthor(this.authorItem);\n    alert(\"success\");\n    this.router.navigate(['/authors']);\n  }\n\n}\n","<div class='card'>\n        <div class='card-header'>\n            <h3>Edit Author</h3>\n        </div>\n        <div class='card-body'>\n\n\n\n            \n<div class=\"container\">\n    <div class=\"row\">\n      \n      <div class=\"col-md-12\"> \n        \n        <div class=\"panel\">\n          <div class=\"panel-body\">\n            \n            \n       \n            <!--/stories-->\n            <form (ngSubmit)=\"editAuthor()\" #updateauthorform=\"ngForm\">\n              <div class=\"form-group\">\n                  <label >Author Name</label>\n                  <input type=\"text\" name=\"a_name\" [(ngModel)]=\"authorItem.name\" placeholder=\"Type Name Of Author\" class=\"form-control\"  required>\n              </div>\n        \n              <div class=\"form-group\">\n                  <label >Author Genre</label>\n                  <input type=\"text\" name=\"a_genre\" [(ngModel)]=\"authorItem.genre\" placeholder=\"Type Genre\"  class=\"form-control\"  required>\n              </div>\n              \n              <div class=\"form-group\">\n                  <label >Book1</label>\n                  <input type=\"text\" name=\"a_book1\" [(ngModel)]=\"authorItem.book1\" placeholder=\"Type Name Of Book1\"  class=\"form-control\" required>\n                        \n              </div>\n              <div class=\"form-group\">\n                <label >Book2</label>\n                <input type=\"text\" name=\"a_book2\" [(ngModel)]=\"authorItem.book2\" placeholder=\"Type Name Of Book2\"  class=\"form-control\" >\n                      \n            </div>\n            <div class=\"form-group\">\n                <label >Book3</label>\n                <input type=\"text\" name=\"a_book3\" [(ngModel)]=\"authorItem.book3\" placeholder=\"Type Name Of Book3\"  class=\"form-control\" >\n                      \n            </div>\n              <div class=\"form-group\">\n                  <label >Author Image</label>\n                  <input type=\"file\" name=\"a_image\" [(ngModel)]=\"authorItem.image\" placeholder=\"Chose Image Of Book\"  class=\"form-control\" required >\n              </div>\n              <button type=\"submit\"  value=\"Submit\" class=\"btn btn-primary btn-block\" [disabled]=\"updateauthorform.form.invalid\">Submit</button>\n  </form>\n  <br>\n  <br>  \n  \n            <!--/stories-->\n            \n            \n          \n            \n          </div>\n        </div>\n                                                                                         \n                                                      \n                                                        \n         </div><!--/col-12-->\n    </div>\n  </div>\n                        \n\n\n\n\n\n<!-- \n\n\n            <div class='table-responsive'>\n                <table class=table>\n                    <tbody>\n                        <tr>\n                            <td><label> Author Name</label></td>\n                            <td><input type=\"text\" name=\"a_name\" [(ngModel)]=\"authorItem.name\"></td>\n                        </tr>\n                        <tr>\n                            <td><label> Author Genre</label></td>\n                            <td><input type=\"text\" name=\"a_genre\" [(ngModel)]=\"authorItem.genre\"></td>\n                        </tr>\n                        <tr>\n                            <td><label> Book1 </label></td>\n                            <td><input type=\"text\" name=\"a_book1\" [(ngModel)]=\"authorItem.book1\"></td>\n                        </tr>\n                        <tr>\n                            <td><label> Book2 </label></td>\n                            <td><input type=\"text\" name=\"a_book2\" [(ngModel)]=\"authorItem.book2\"></td>\n                        </tr>\n                        <tr>\n                            <td><label> Book3 </label></td>\n                            <td><input type=\"text\" name=\"a_book3\" [(ngModel)]=\"authorItem.book3\"></td>\n                        </tr>\n                         <tr>\n                            <td><label> Author Image</label></td>\n                            <td><input type=\"text\" name=\"a_image\" [(ngModel)]=\"authorItem.image\"></td>\n                        </tr>\n                        <tr>\n                            <td></td>\n                            <td><input type=\"submit\" value=\"Submit\"></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </form> -->\n</div>\n\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n  item= {\n    title :'',\n    author:'',\n    genre:'',\n    image:''\n  }\n  constructor(private http:HttpClient) { }\n  getBooks(){\n    return this.http.get(\"http://localhost:3000/books\");\n  }\n   \n  getBook(id){\n    return this.http.get(\"http://localhost:3000/book/\"+id);\n  }\n\n  newBook(item){\n    return this.http.post(\"http://localhost:3000/books/insert\",{\"book\":item})\n    .subscribe(data=> { console.log(data)} )\n  }\n\n  editBook(book)\n  {\n    console.log(\"client update\");\n    return this.http.put(\"http://localhost:3000/books/update\",book)\n    .subscribe(data=>{\n      console.log(data)\n    })\n  }\n\n  deleteBook(id)\n  {\n    return this.http.delete(\"http://localhost:3000/books/remove/\"+id)\n  }\n\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { BookService } from '../book.service';\nimport { BookModel } from './book.model';\n\n@Component({\n  selector: 'app-books',\n  templateUrl: './books.component.html',\n  styleUrls: ['./books.component.css']\n})\nexport class BooksComponent implements OnInit {\n  \n  title: String = \"Book List\";\n  books: BookModel[];\n  \n\n  constructor(private bookService:BookService,private router:Router,public _auth:AuthService ) { }\n  \n\n  ngOnInit(): void {\n   \n    this.bookService.getBooks().subscribe((data)=>{\n      this.books=JSON.parse(JSON.stringify(data));\n      console.log(this.books);\n    })\n  }\n\n  editBook(book)\n  {\n    localStorage.setItem(\"editBookId\",book._id.toString());\n    this.router.navigate(['update/books']);\n  }\n\n  deleteBook(book)\n  {\n    this.bookService.deleteBook(book._id)\n    .subscribe((data)=>{\n      this.books=this.books.filter(p=> p !==book);\n    })\n  }\n\n}\n","<div class='card' style=\"width: 100%\">\n    <div class='card-header' style=\"width: 100\">\n        <h3>{{title}} </h3>\n    </div>\n    <div class='card-body' style=\"width: 100\">\n       \n          <br>\n        <div class=\"row\" *ngFor='let book of books'>    \n            <br>\n            <div class=\"col-md-3 col-sm-3 text-center\">\n        <img alt=\"\" src={{book.image}} style=\"width:150px;height:150px\"  class=\"rounded-circle\" >\n            </div>\n\n\n            <br>\n            <div class=\"col col-lg-2\">\n              <div class=\"row\">\n                <div class=\"col-xs-9\">\n                    <h2>{{book.title}}</h2>\n                  <h4><span class=\"label label-default\">{{book.author}}</span></h4><h4>\n                  <small style=\"font-family:courier,'new courier';\" class=\"text-muted\">{{book.genre}}   \n                    </small>\n                  </h4>\n                <div></div>\n                </div>\n                <div>\n                <button class=\"btn btn-warning\" style=\"cursor: pointer;\" *ngIf=\"_auth.loggedIn()\" (click)=\"editBook(book)\" >EDIT</button>\n                <button class=\"btn btn-danger\" id=\"btnspace2\" style=\"cursor: pointer;\" *ngIf=\"_auth.loggedIn()\" (click)=\"deleteBook(book)\" >DELETE</button>\n                </div>\n              </div>\n              <hr>\n              <br><br>\n            </div>\n          </div>\n          <hr>\n          \n          \n\n    </div>\n</div>\n\n\n","export class BookModel{\n    constructor(\n    public title: string,\n    public author:string,\n    public genre:string,\n    public image:string\n    ){}\n}","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'products';\n  \n}\n","<app-header></app-header>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthService } from './auth.service';\nimport { TokenInterceptorService } from './token-interceptor.service';\nimport { BooksComponent } from './books/books.component';\nimport { NewBookComponent } from './new-book/new-book.component';\nimport { UpdateBookComponent } from './update-book/update-book.component';\nimport { AuthorsComponent } from './authors/authors.component';\nimport { NewAuthorComponent } from './new-author/new-author.component';\nimport { UpdateAuthorComponent } from './update-author/update-author.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    LoginComponent,\n    BooksComponent,\n    NewBookComponent,\n    UpdateBookComponent,\n    AuthorsComponent,\n    NewAuthorComponent,\n    UpdateAuthorComponent,\n    SignupComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [AuthService,\n              {\n                provide:HTTP_INTERCEPTORS,\n                useClass:TokenInterceptorService,\n                multi:true\n              }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class AuthorModel{\n    constructor(\n    public name: string,\n    public genre:string,\n    public book1:string,\n    public book2:string,\n    public book3:string,\n    public image:string\n    ){}\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\nloginUser(user)\n{\n  return this.http.post<any>(\"http://localhost:3000/login\",user);\n}\nsignupUser(user)\n{\n  return this.http.post<any>(\"http://localhost:3000/signup\",user)\n  .subscribe(data=>{\n    console.log(data)\n  })\n}\n  constructor(private http:HttpClient) { }\nloggedIn()\n{\n  return !!localStorage.getItem('token')\n}\nloggedUserIn()\n{\n  return !!localStorage.getItem('token1')\n}\nlogIn(){\n  return !!(localStorage.getItem('token1') || localStorage.getItem('token'))\n}\ngetToken()\n  {\n    return localStorage.getItem('token')\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthorService } from '../author.service';\nimport { AuthorModel }  from '../authors/author.model';\n\n@Component({\n  selector: 'app-new-author',\n  templateUrl: './new-author.component.html',\n  styleUrls: ['./new-author.component.css']\n})\nexport class NewAuthorComponent implements OnInit {\n  title:String = \"Add Author\";\n  constructor(private authorService:AuthorService,private router:Router) { }\n\n  authorItem = new AuthorModel('','','','','','');\n\n  ngOnInit(): void {\n  }\n\n  AddAuthor(){\n    this.authorService.newAuthor(this.authorItem);\n    console.log(\"called\");\n    alert(\"success\");\n    this.router.navigate(['/authors']);\n  }\n\n}\n","<div class='card'>\n        <div class='card-header'>\n            <h3>{{title}}</h3>\n        </div>\n        <div class='card-body'>\n\n\n           \n<div class=\"container\">\n    <div class=\"row\">\n      \n      <div class=\"col-md-12\"> \n        \n        <div class=\"panel\">\n          <div class=\"panel-body\">\n            \n            \n       \n            <!--/stories-->\n            <form (ngSubmit)=\"AddAuthor()\" #addauthorform=\"ngForm\">\n              <div class=\"form-group\">\n                  <label >Author Name</label>\n                  <input type=\"text\" name=\"a_name\" [(ngModel)]=\"authorItem.name\" #aname='ngModel' placeholder=\"Type Name Of Author\" class=\"form-control\" required >\n                  <small class=\"text-danger\" [class.d-none]=\"aname.valid || aname.touched\">Empty Value Not Supported</small>    \n\n                </div>\n        \n              <div class=\"form-group\">\n                  <label >Author Genre</label>\n                  <input type=\"text\" name=\"a_genre\" [(ngModel)]=\"authorItem.genre\" #agenre='ngModel' placeholder=\"Type Genre\"  class=\"form-control\" required >\n                  <small class=\"text-danger\" [class.d-none]=\"agenre.valid || agenre.touched\">Empty Value Not Supported</small>    \n\n                </div>\n              \n              <div class=\"form-group\">\n                  <label >Book1</label>\n                  <input type=\"text\" name=\"a_book1\" [(ngModel)]=\"authorItem.book1\"  #book1='ngModel' placeholder=\"Type Name Of Book1\"  class=\"form-control\" required>\n                  <small class=\"text-danger\" [class.d-none]=\"book1.valid || book1.touched\">Empty Value Not Supported</small>    \n              </div>\n              <div class=\"form-group\">\n                <label >Book2</label>\n                <input type=\"text\" name=\"a_book2\" [(ngModel)]=\"authorItem.book2\" placeholder=\"Type Name Of Book2(optional)\"  class=\"form-control\">\n                      \n            </div>\n            <div class=\"form-group\">\n                <label >Book3</label>\n                <input type=\"text\" name=\"a_book3\" [(ngModel)]=\"authorItem.book3\" placeholder=\"Type Name Of Book3(optional)\"  class=\"form-control\">\n                      \n            </div>\n              <div class=\"form-group\">\n                  <label >Author Image</label>\n                  <input type=\"file\" name=\"a_image\" [(ngModel)]=\"authorItem.image\" #bimage='ngModel' placeholder=\"Chose Image Of Book\"  class=\"form-control\" required>\n                  <small class=\"text-danger\" [class.d-none]=\"bimage.valid || bimage.touched\">Empty Value Not Supported</small>    \n\n                </div>\n              <button type=\"submit\"  value=\"Submit\" class=\"btn btn-primary btn-block\" [disabled]=\"addauthorform.form.invalid\">Submit</button>\n  </form>\n  <br>\n  <br>  \n  \n            <!--/stories-->\n            \n            \n          \n            \n          </div>\n        </div>\n                                                                                         \n                                                      \n                                                        \n         </div><!--/col-12-->\n    </div>\n  </div>\n                        \n\n\n\n\n\n\n\n<!-- \n            <div class='table-responsive'>\n                <table class=table>\n                    <tbody>\n                        <tr>\n                            <td><label> Author Name</label></td>\n                            <td><input type=\"text\" name=\"a_name\" [(ngModel)]=\"authorItem.name\"></td>\n                        </tr>\n                        <tr>\n                            <td><label> Author Genre</label></td>\n                            <td><input type=\"text\" name=\"a_genre\" [(ngModel)]=\"authorItem.genre\"></td>\n                        </tr>\n                        <tr>\n                            <td><label> Book1 </label></td>\n                            <td><input type=\"text\" name=\"a_book1\" [(ngModel)]=\"authorItem.book1\"></td>\n                        </tr>\n                        <tr>\n                            <td><label> Book2 </label></td>\n                            <td><input type=\"text\" name=\"a_book2\" [(ngModel)]=\"authorItem.book2\"></td>\n                        </tr>\n                        <tr>\n                            <td><label> Book3 </label></td>\n                            <td><input type=\"text\" name=\"a_book3\" [(ngModel)]=\"authorItem.book3\"></td>\n                        </tr>\n                         <tr>\n                            <td><label> Author Image</label></td>\n                            <td><input type=\"text\" name=\"a_image\" [(ngModel)]=\"authorItem.image\"></td>\n                        </tr>\n                        <tr>\n                            <td></td>\n                            <td><input type=\"submit\" value=\"Submit\"></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </form> -->\n\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public _auth:AuthService,private _router:Router) { }\n  title:String=\"Library Manager\";\n  ngOnInit(): void {\n  }\n\n  logoutUser()\n  {\n    localStorage.removeItem('token')\n    localStorage.removeItem('token1')\n    this._router.navigate(['/login'])\n  }\n}\n","<div id=\"title-main\">\n<h1>\n    {{title}}\n</h1>\n</div>\n\n\n<div class=\"card-header \">\n    <ul class=\"nav nav-tabs card-header-tabs\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/login\" *ngIf=\" !_auth.logIn()\"  >Login</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/signup\" *ngIf=\" !_auth.logIn()\">Sign Up</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/\" >Home</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/books\" *ngIf=\" _auth.logIn()\">Books</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/add/books\" *ngIf=\"_auth.loggedIn()\">Add Book</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/authors\" *ngIf=\" _auth.logIn()\" >Authors</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/add/authors\" *ngIf=\"_auth.loggedIn()\">Add Author</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" *ngIf=\"_auth.loggedIn() || _auth.loggedUserIn() \" (click)=\"logoutUser()\">LogOut</a>\n      </li>\n    </ul>\n  </div>\n\n<!-- <div>\n<nav>\n<div class=\"collapse navbar-collapse\" id=navbarSupportedContent>\n    <ul class=\"navbar-nav navbar-right\">\n      <a class=\"navbar-link\" routerLinkActive=\"active\" routerLink=\"/login\" *ngIf=\"!_auth.loggedIn()\">LogIn</a>\n       <a routerLink=\"/add\" class=\"navbar-link\" style=\"cursor: pointer;\" *ngIf=\"_auth.loggedIn()\">Add Product</a>\n       <a class=\"navbar-link\" style=\"cursor: pointer;\" *ngIf=\"_auth.loggedIn()\" (click)=\"logoutUser()\">Logout</a>\n    </ul>\n</div> -->\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookService } from '../book.service';\nimport {BookModel} from '../books/book.model';\n\n@Component({\n  selector: 'app-new-book',\n  templateUrl: './new-book.component.html',\n  styleUrls: ['./new-book.component.css']\n})\nexport class NewBookComponent implements OnInit {\n  title:String = \"Add Book\";\n  constructor(private bookService:BookService,private router:Router) { }\n  bookItem = new BookModel('','','','');\n  ngOnInit(): void {\n  }\n\n  AddBook(){\n    this.bookService.newBook(this.bookItem);\n    console.log(\"called\");\n    alert(\"success\");\n    this.router.navigate(['/books']);\n  }\n\n}\n","<div class='card'>\n        <div class='card-header'>\n            <h3>{{title}}</h3>\n        </div>\n        <div class='card-body'>\n\n\n         \n<div class=\"container\">\n    <div class=\"row\">\n      \n      <div class=\"col-md-12\"> \n        \n        <div class=\"panel\">\n          <div class=\"panel-body\">\n            \n            \n       \n            <!--/stories-->\n            <form (ngSubmit)=\"AddBook()\" #addbookform=\"ngForm\">\n              <div class=\"form-group\">\n                  <label >Book Title</label>\n                  <input type=\"text\" name=\"b_title\" [(ngModel)]=\"bookItem.title\" #bname='ngModel' placeholder=\"Type Title Of Book\" class=\"form-control\"  required>\n                  <small class=\"text-danger\" [class.d-none]=\"bname.valid || bname.touched\">Empty Value Not Supported</small>    \n\n                </div>\n        \n              <div class=\"form-group\">\n                  <label >Author</label>\n                  <input type=\"text\" name=\"b_auth\" [(ngModel)]=\"bookItem.author\" #bauth='ngModel' placeholder=\"Type Author Of Book\"  class=\"form-control\" required >\n                  <small class=\"text-danger\" [class.d-none]=\"bauth.valid || bauth.touched\">Empty Value Not Supported</small>    \n                 \n                </div>\n              \n              <div class=\"form-group\">\n                  <label >Book Genre</label>\n                  <input type=\"text\" name=\"b_genre\" [(ngModel)]=\"bookItem.genre\" #bgenre='ngModel' placeholder=\"Type Genre Of Book\"  class=\"form-control\" required>\n                  <small class=\"text-danger\" [class.d-none]=\"bgenre.valid || bgenre.touched\">Empty Value Not Supported</small>    \n     \n              </div>\n              <div class=\"form-group\">\n                  <label >Book Image</label>\n                  <input type=\"file\" name=\"b_image\" [(ngModel)]=\"bookItem.image\" #book='ngModel' placeholder=\"Chose Image Of Book\"  class=\"form-control\" required>\n                  <small class=\"text-danger\" [class.d-none]=\"book.valid || book.touched\">Empty Value Not Supported</small>    \n\n                </div>\n              <button type=\"submit\"  value=\"Submit\" class=\"btn btn-primary btn-block\" [disabled]=\"addbookform.form.invalid\">Submit</button>\n  </form>\n  <br>\n  <br>  \n  \n            <!--/stories-->\n            \n            \n          \n            \n          </div>\n        </div>\n                                                                                         \n                                                      \n                                                        \n         </div><!--/col-12-->\n    </div>\n  </div>\n                        \n\n\n\n\n\n\n<!-- \n\n            <div class='table-responsive'>\n                <table class=table>\n                    <tbody>\n                        <tr>\n                            <td><label> Book Title</label></td>\n                            <td><input type=\"text\" name=\"b_title\" [(ngModel)]=\"bookItem.title\"></td>\n                        </tr>\n                        <tr>\n                            <td><label> Book Author</label></td>\n                            <td><input type=\"text\" name=\"b_auth\" [(ngModel)]=\"bookItem.author\"></td>\n                        </tr>\n                        <tr>\n                            <td><label> Book Genre</label></td>\n                            <td><input type=\"text\" name=\"b_genre\" [(ngModel)]=\"bookItem.genre\"></td>\n                        </tr>\n                         <tr>\n                            <td><label> Book Image</label></td>\n                            <td><input type=\"text\" name=\"b_image\" [(ngModel)]=\"bookItem.image\"></td>\n                        </tr>\n                        <tr>\n                            <td></td>\n                            <td><input type=\"submit\" value=\"Submit\"></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </form> -->\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  user={\n    email1:'',\n    number1:'',\n  password1:'',\n  password2:''\n  }\n  constructor(private router:Router,private authServices:AuthService) { }\n\n  ngOnInit(): void {\n  }\nsignupUser()\n{\n  this.authServices.signupUser(this.user);\n    alert(\"success\");\n    this.router.navigate(['/login']);\n}\n}\n","<div class=\"py-5\">\n    <div class=\"row\">\n        <div class=\"col-md-6 mx-auto\">\n            <span class=\"anchor\" id=\"formLogin\"></span>\n\n            <div class=\"card rounded-0\">\n                <div class=\"card-header\">\n                    <h3 class=\"mb-0\"> Sign Up </h3>\n                </div>\n\n                <div class=\"card-body\">\n\n                      <form #usersignup=\"ngForm\" (ngSubmit)=\"signupUser()\">\n                        <div class=\"form-group\">\n                            <label >Email</label>\n                            <input type=\"email\" name=\"email\" placeholder=\"Email\"  class=\"form-control\" #email1='ngModel' pattern=\"^[a-z0-9.%+]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" [class.is-invalid]=\"email1.invalid && email1.touched\" [(ngModel)]=\"user.email1\" required>\n                            <small class=\"text-danger\" [class.d-none]=\"email1.valid || email1.touched\">Enter a Valid Email</small>\n                        </div>\n                  \n                        <div class=\"form-group\">\n                            <label >Phone Number</label>\n                            <input type=\"text\" name=\"number\" placeholder=\"Phone Number\" class=\"form-control\" #number1='ngModel' minlength=\"10\" maxlength=\"10\" [class.is-invalid]=\"number1.invalid && number1.touched\" [(ngModel)]=\"user.number1\" required>\n                            <small class=\"text-danger\" [class.d-none]=\"number1.valid || number1.touched\">Enter a Valid Number</small>\n                        </div>\n                        \n                        <div class=\"form-group\">\n                            <label >Password</label>\n                            <input type=\"password\" name=\"password1\" placeholder=\"Password\"  #pass1='ngModel' class=\"form-control\" #password1='ngModel' [(ngModel)]=\"user.password1\" minlength=\"8\" required>\n                            <small class=\"text-danger\" [class.d-none]=\"pass1.valid || pass1.touched\">Enter a Valid Password</small>\n                        </div>\n                        <div class=\"form-group\">\n                            <label >Re-Enter Password</label>\n                            <input type=\"text\" name=\"password2\" placeholder=\"Password\" #pass2='ngModel'  class=\"form-control\" [(ngModel)]=\"user.password2\" #password2='ngModel' pattern=\"{{user.password1}}\" required >\n                            <small class=\"text-danger\" [class.d-none]=\"pass2.valid || pass2.untouched\">Enter the matching password</small>\n                        </div>\n                        <button type=\"submit\"  class=\"btn btn-primary btn-block\" [disabled]=\"usersignup.form.invalid\"> Sign UP</button>\n            </form>\n\n\n\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private _auth:AuthService,private _router:Router){}\n  canActivate():boolean\n  {\n    if(this._auth.loggedIn())\n    {\n      return true;\n    }\n    else{\n      this._router.navigate(['/'])\n      return false;\n    }\n  }\n  \n  \n  \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\nimport { AuthorsComponent } from './authors/authors.component';\nimport { BooksComponent } from './books/books.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { NewAuthorComponent } from './new-author/new-author.component';\nimport { NewBookComponent } from './new-book/new-book.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { UpdateAuthorComponent } from './update-author/update-author.component';\nimport { UpdateBookComponent } from './update-book/update-book.component';\n\n\nconst routes: Routes = [{path:'',component:HomeComponent},\n                        {path:'login',component:LoginComponent},\n                        {path:'signup',component:SignupComponent},\n\n                        {path:'books',component:BooksComponent},\n                        {path:'add/books',\n                        canActivate:[AuthGuard],\n                        component:NewBookComponent},\n                        {path:'update/books',component:UpdateBookComponent},\n\n                        {path:'authors',component:AuthorsComponent},\n                        {path:'add/authors',\n                        canActivate:[AuthGuard],\n                        component:NewAuthorComponent},\n                        {path:'update/authors',component:UpdateAuthorComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\nuser={\n  username:'',\npassword:''\n}\n\n\n  constructor(private _auth:AuthService,private _router: Router) { }\n\n  ngOnInit(): void {\n  }\nloginUser()\n{\n  this._auth.loginUser(this.user)\n  .subscribe(\n    res=>{\n      if(res.token){\n      localStorage.setItem('token',res.token)\n      alert(\"success\");\n      this._router.navigate(['/'])\n      }\n\n      if(res.token1){\n        localStorage.setItem('token1',res.token1)\n        alert(\"success\");\n        this._router.navigate(['/'])\n        }\n      if(res.msg)\n      {\n        alert(\"Wrong:Try Again!!\");\n      }\n\n    }\n  )\n}\n}\n","<div class=\"py-5\">\n    <div class=\"row\">\n        <div class=\"col-md-6 mx-auto\">\n            <span class=\"anchor\" id=\"formLogin\"></span>\n\n            <div class=\"card rounded-0\">\n                <div class=\"card-header\">\n                    <h3 class=\"mb-0\"> Login </h3>\n                </div>\n\n                <div class=\"card-body\">\n\n\n                   \n\n                    <form   (ngSubmit)=\"loginUser()\" #userlogin=\"ngForm\">\n                        <div class=\"form-group\">\n                          <label for=\"username\" >User Email</label>\n                          <input type=\"email\" name=\"username\"  class=\"form-control\" #email='ngModel' pattern=\"^[a-z0-9.%+]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" [class.is-invalid]=\"email.invalid && email.touched\" [(ngModel)]=\"user.username\" required >\n                          <small class=\"text-danger\" [class.d-none]=\"email.valid || email.touched\">Enter The Valid Email</small>\n                          \n                        </div>\n\n                        <div class=\"form-group\">\n                          <label for=\"password\" >Password</label>\n                          <input type=\"password\" name=\"password\" #pass='ngModel' class=\"form-control\" [(ngModel)]=\"user.password\" minlength=\"8\" required>\n                          <small class=\"text-danger\" [class.d-none]=\"pass.valid || pass.untouched\">Enter The Valid Password</small>\n\n                        </div>\n                        <button type=\"submit\"  class=\"btn btn-primary btn-block\" [disabled]=\"userlogin.form.invalid\" >Submit</button>\n                        \n                    </form>\n\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}